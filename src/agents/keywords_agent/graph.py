from typing import Any
from langgraph.graph import StateGraph, MessagesState, START


# Define the State
class KeywordState(MessagesState):

    # step 1: list of retrieved entities and events from user input
    retrieved_entities: list[str]

    # step 2: agent generated search queries to find competitors based on retrieved entities
    generated_search_queries: list[str]

    # result of executing search queries: int = rank, dict[str, str] = url/title/content, value
    competitor_information: dict[int, dict[str, str]]

    # result of step 2: analysis generated by our agent after comparing our article with competitor content
    competitive_analysis: str

    # TODO step 3: google keyword planner data (data structure TBD)
    keyword_planner_data: Any

    # step 4: refined keyword masterlist: str = keyword, dict[str, str] = metrics
    keyword_masterlist: dict[str, dict[str, str]]

    # step 5: primary keywords to use in the article: str = keyword, str = reasoning
    primary_keywords: dict[str, str]
    secondary_keywords: dict[str, str]

    # step 6: final answer with complete suggestions and reasoning
    suggested_url_slug: str
    suggested_article_headlines: list[str]
    final_answer: str
